package com.lizza;
/**
 * 1. 现代JVM在执行Java代码的时候, 通常都会将解释执行和编译执行两者结合起来进行
 * 2. 所谓解释执行, 就是通过解释器来读取字节码, 遇到相应的指令就去执行该指令
 * 3. 所谓编译执行, 就是通过即时编译器(Just In Time, JIT)将字节码转回为本地机器码来执行,
 *    现代JVM会根据代码热点来生成相应的本地机器码
 *
 * 基于栈的指令集与基于寄存器的指令集
 * 1. Java执行指令时, 是基于栈的指令集
 * 2. 基于栈的指令集主要操作有入栈和出栈两种
 * 3. 基于栈的指令集的优势在于它可以在不同平台之间移植, 而基于寄存器的指令集
 *    与硬件架构紧密相关, 无法做到可移植
 * 4. 基于栈的指令集的缺点在于完成相同的操作, 指令数量通常要比基于寄存器的指令集
 *    数量要多;
 * 5. 基于栈的指令集在内存中完成操作的, 而基于寄存器的指令集是直接在CPU中执行,
 *    速度要快很多, 虽然虚拟机可以采用一些优化手段, 但总体来说, 基于栈的指令集的
 *    执行速度要慢一些
 * 结论: 基于栈的指令集移植性较好, 基于寄存器的指令集性能较好
 */
public class ByteCode_08 {

    public static void main(String[] args){
        int i = 2-1;
    }
}
